
GccApplication163.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000312  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000386  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000b  00800060  00800060  00000386  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000386  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003b8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  000003f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a3c  00000000  00000000  0000042c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000626  00000000  00000000  00000e68  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000053f  00000000  00000000  0000148e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000007c  00000000  00000000  000019d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003fc  00000000  00000000  00001a4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002e7  00000000  00000000  00001e48  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  0000212f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 41 00 	jmp	0x82	; 0x82 <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   8:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  10:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  14:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  18:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  1c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  20:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  24:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  28:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  2c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  30:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  34:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__vector_13>
  38:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  3c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  44:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  48:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  4c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  50:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  54:	90 00       	.word	0x0090	; ????
  56:	ad 00       	.word	0x00ad	; ????
  58:	ad 00       	.word	0x00ad	; ????
  5a:	ad 00       	.word	0x00ad	; ????
  5c:	ad 00       	.word	0x00ad	; ????
  5e:	ad 00       	.word	0x00ad	; ????
  60:	ad 00       	.word	0x00ad	; ????
  62:	ad 00       	.word	0x00ad	; ????
  64:	ad 00       	.word	0x00ad	; ????
  66:	ad 00       	.word	0x00ad	; ????
  68:	ad 00       	.word	0x00ad	; ????
  6a:	ad 00       	.word	0x00ad	; ????
  6c:	ad 00       	.word	0x00ad	; ????
  6e:	ad 00       	.word	0x00ad	; ????
  70:	84 00       	.word	0x0084	; ????
  72:	8a 00       	.word	0x008a	; ????
  74:	96 00       	.word	0x0096	; ????
  76:	9c 00       	.word	0x009c	; ????
  78:	ad 00       	.word	0x00ad	; ????
  7a:	a8 00       	.word	0x00a8	; ????
  7c:	ad 00       	.word	0x00ad	; ????
  7e:	ad 00       	.word	0x00ad	; ????
  80:	a2 00       	.word	0x00a2	; ????

00000082 <__ctors_end>:
  82:	11 24       	eor	r1, r1
  84:	1f be       	out	0x3f, r1	; 63
  86:	cf e5       	ldi	r28, 0x5F	; 95
  88:	d8 e0       	ldi	r29, 0x08	; 8
  8a:	de bf       	out	0x3e, r29	; 62
  8c:	cd bf       	out	0x3d, r28	; 61

0000008e <__do_clear_bss>:
  8e:	20 e0       	ldi	r18, 0x00	; 0
  90:	a0 e6       	ldi	r26, 0x60	; 96
  92:	b0 e0       	ldi	r27, 0x00	; 0
  94:	01 c0       	rjmp	.+2      	; 0x98 <.do_clear_bss_start>

00000096 <.do_clear_bss_loop>:
  96:	1d 92       	st	X+, r1

00000098 <.do_clear_bss_start>:
  98:	ab 36       	cpi	r26, 0x6B	; 107
  9a:	b2 07       	cpc	r27, r18
  9c:	e1 f7       	brne	.-8      	; 0x96 <.do_clear_bss_loop>
  9e:	0e 94 b8 00 	call	0x170	; 0x170 <main>
  a2:	0c 94 87 01 	jmp	0x30e	; 0x30e <_exit>

000000a6 <__bad_interrupt>:
  a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000aa <_Z10usart_initj>:
#include <util/delay.h>
#include <avr/sfr_defs.h>

void usart_init(unsigned int speed)
{
	UBRRH=(unsigned char)(speed>>8);
  aa:	90 bd       	out	0x20, r25	; 32
	UBRRL=(unsigned char) speed;
  ac:	89 b9       	out	0x09, r24	; 9
	UCSRA=0x00;
  ae:	1b b8       	out	0x0b, r1	; 11
	UCSRB|=(1<<RXEN)|(1<<TXEN);
  b0:	8a b1       	in	r24, 0x0a	; 10
  b2:	88 61       	ori	r24, 0x18	; 24
  b4:	8a b9       	out	0x0a, r24	; 10
	UCSRB|=(1<<RXCIE);
  b6:	57 9a       	sbi	0x0a, 7	; 10
	UCSRC=(1<<URSEL)|(1<<UCSZ1)|(1<<UCSZ0);
  b8:	86 e8       	ldi	r24, 0x86	; 134
  ba:	80 bd       	out	0x20, r24	; 32
  bc:	08 95       	ret

000000be <_Z8InitPortv>:
}

void InitPort(void)
{
	UDR = 'b';
  be:	82 e6       	ldi	r24, 0x62	; 98
  c0:	8c b9       	out	0x0c, r24	; 12
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c2:	8f ec       	ldi	r24, 0xCF	; 207
  c4:	97 e0       	ldi	r25, 0x07	; 7
  c6:	01 97       	sbiw	r24, 0x01	; 1
  c8:	f1 f7       	brne	.-4      	; 0xc6 <_Z8InitPortv+0x8>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <_Z8InitPortv+0xe>
  cc:	00 00       	nop
	_delay_ms(1);
	UDR = 'd';
  ce:	84 e6       	ldi	r24, 0x64	; 100
  d0:	8c b9       	out	0x0c, r24	; 12
  d2:	08 95       	ret

000000d4 <__vector_13>:

bool StatePS2 = false;
bool InterPS2 = false;

ISR(USART_RXC_vect)
{
  d4:	1f 92       	push	r1
  d6:	0f 92       	push	r0
  d8:	0f b6       	in	r0, 0x3f	; 63
  da:	0f 92       	push	r0
  dc:	11 24       	eor	r1, r1
  de:	8f 93       	push	r24
  e0:	9f 93       	push	r25
  e2:	af 93       	push	r26
  e4:	bf 93       	push	r27
  e6:	ef 93       	push	r30
  e8:	ff 93       	push	r31
	Data = UDR;
  ea:	ec b1       	in	r30, 0x0c	; 12
  ec:	e0 93 6a 00 	sts	0x006A, r30	; 0x80006a <Data>
	switch(Data)
  f0:	8e 2f       	mov	r24, r30
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	fc 01       	movw	r30, r24
  f6:	e3 55       	subi	r30, 0x53	; 83
  f8:	f1 09       	sbc	r31, r1
  fa:	e7 31       	cpi	r30, 0x17	; 23
  fc:	f1 05       	cpc	r31, r1
  fe:	68 f5       	brcc	.+90     	; 0x15a <__vector_13+0x86>
 100:	e6 5d       	subi	r30, 0xD6	; 214
 102:	ff 4f       	sbci	r31, 0xFF	; 255
 104:	0c 94 81 01 	jmp	0x302	; 0x302 <__tablejump2__>
	{
		case 'a':
		IN_0_SW_ON = true;
 108:	81 e0       	ldi	r24, 0x01	; 1
 10a:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <IN_0_SW_ON>
		InterruptCounter = true;
 10e:	80 93 67 00 	sts	0x0067, r24	; 0x800067 <InterruptCounter>
		break;
 112:	23 c0       	rjmp	.+70     	; 0x15a <__vector_13+0x86>
		case 'b':
		OUT_0_SW_ON = true;
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <OUT_0_SW_ON>
		InterruptCounter = true;
 11a:	80 93 67 00 	sts	0x0067, r24	; 0x800067 <InterruptCounter>
		break;
 11e:	1d c0       	rjmp	.+58     	; 0x15a <__vector_13+0x86>
		case 'S':
		To_Interface = true;
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <To_Interface>
		InterfaceCounter = true;
 126:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <InterfaceCounter>
		break;
 12a:	17 c0       	rjmp	.+46     	; 0x15a <__vector_13+0x86>
		case 'c':
		In_F1 = true;
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <In_F1>
		Interuupt_F1 = true;
 132:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <Interuupt_F1>
		break;
 136:	11 c0       	rjmp	.+34     	; 0x15a <__vector_13+0x86>
		case 'd':
		Out_F1 = true;
 138:	81 e0       	ldi	r24, 0x01	; 1
 13a:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <Out_F1>
		Interuupt_F1 = true;
 13e:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <Interuupt_F1>
		break;
 142:	0b c0       	rjmp	.+22     	; 0x15a <__vector_13+0x86>
		case 'i':
		StatePS2 = true;
 144:	81 e0       	ldi	r24, 0x01	; 1
 146:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <StatePS2>
		InterPS2 = true;
 14a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
		break;
 14e:	05 c0       	rjmp	.+10     	; 0x15a <__vector_13+0x86>
		case 'f':
		StatePS2 = false;
 150:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <StatePS2>
		InterPS2 = true;
 154:	81 e0       	ldi	r24, 0x01	; 1
 156:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
		break;
	}
}
 15a:	ff 91       	pop	r31
 15c:	ef 91       	pop	r30
 15e:	bf 91       	pop	r27
 160:	af 91       	pop	r26
 162:	9f 91       	pop	r25
 164:	8f 91       	pop	r24
 166:	0f 90       	pop	r0
 168:	0f be       	out	0x3f, r0	; 63
 16a:	0f 90       	pop	r0
 16c:	1f 90       	pop	r1
 16e:	18 95       	reti

00000170 <main>:

int main(void)
{
	DDRA = 0xFF;
 170:	8f ef       	ldi	r24, 0xFF	; 255
 172:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0xFF;
 174:	87 bb       	out	0x17, r24	; 23
	DDRC = 0x00;
 176:	14 ba       	out	0x14, r1	; 20
	PORTA |= (1<<PA0);
 178:	d8 9a       	sbi	0x1b, 0	; 27
	PORTB |= (1<<PB0);
 17a:	c0 9a       	sbi	0x18, 0	; 24

	usart_init(UBRR_VAL);
 17c:	83 e3       	ldi	r24, 0x33	; 51
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	0e 94 55 00 	call	0xaa	; 0xaa <_Z10usart_initj>
	sei();
 184:	78 94       	sei
				PORTB &= ~(1<<PB2);
				PORTA &= ~(1<<PA2);
				_delay_ms(1);
				if (bit_is_clear(PINC, PINC2))
				{
					UDR = 'f';
 186:	06 e6       	ldi	r16, 0x66	; 102
				PORTB |= (1<<PB2);
				PORTA |= (1<<PA2);
				_delay_ms(1);
				if (bit_is_set(PINC, PINC2))
				{
					UDR = 'i';
 188:	19 e6       	ldi	r17, 0x69	; 105
				PORTB &= ~(1<<PB1);
				PORTA &= ~(1<<PA1);
				_delay_ms(1);
				if (bit_is_clear(PINC, PINC1))
				{
					UDR = 'd';
 18a:	0f 2e       	mov	r0, r31
 18c:	f4 e6       	ldi	r31, 0x64	; 100
 18e:	ef 2e       	mov	r14, r31
 190:	f0 2d       	mov	r31, r0
				PORTB |= (1<<PB1);
				PORTA |= (1<<PA1);
				_delay_ms(1);
				if (bit_is_set(PINC, PINC1))
				{
					UDR = 'c';
 192:	0f 2e       	mov	r0, r31
 194:	f3 e6       	ldi	r31, 0x63	; 99
 196:	ff 2e       	mov	r15, r31
 198:	f0 2d       	mov	r31, r0
			Interuupt_F1 = false;			
		}
		_delay_ms(1);
		if (InterfaceCounter)
		{
			DDRA = 0xFF;
 19a:	cf ef       	ldi	r28, 0xFF	; 255
				_delay_ms(1);
				if (bit_is_clear(PINC, PINC1))
				{
					UDR = 'd';
				}
				Out_F1 = true;
 19c:	d1 e0       	ldi	r29, 0x01	; 1
				PORTA |= (1<<PA1);
				PORTB &= ~(1<<PB0);
				_delay_ms(1);
				if (bit_is_clear(PINC, PINC0))
				{
					UDR = 'a';
 19e:	0f 2e       	mov	r0, r31
 1a0:	f1 e6       	ldi	r31, 0x61	; 97
 1a2:	df 2e       	mov	r13, r31
 1a4:	f0 2d       	mov	r31, r0
 1a6:	8f ec       	ldi	r24, 0xCF	; 207
 1a8:	97 e0       	ldi	r25, 0x07	; 7
 1aa:	01 97       	sbiw	r24, 0x01	; 1
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <main+0x3a>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <main+0x40>
 1b0:	00 00       	nop
	sei();

	while(1)
	{
		_delay_ms(1);
		if (InterPS2)
 1b2:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 1b6:	88 23       	and	r24, r24
 1b8:	e1 f0       	breq	.+56     	; 0x1f2 <main+0x82>
		{
			if (StatePS2)
 1ba:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <StatePS2>
 1be:	88 23       	and	r24, r24
 1c0:	61 f0       	breq	.+24     	; 0x1da <main+0x6a>
			{
				PORTB |= (1<<PB2);
 1c2:	c2 9a       	sbi	0x18, 2	; 24
				PORTA |= (1<<PA2);
 1c4:	da 9a       	sbi	0x1b, 2	; 27
 1c6:	8f ec       	ldi	r24, 0xCF	; 207
 1c8:	97 e0       	ldi	r25, 0x07	; 7
 1ca:	01 97       	sbiw	r24, 0x01	; 1
 1cc:	f1 f7       	brne	.-4      	; 0x1ca <main+0x5a>
 1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <main+0x60>
 1d0:	00 00       	nop
				_delay_ms(1);
				if (bit_is_set(PINC, PINC2))
 1d2:	9a 9b       	sbis	0x13, 2	; 19
 1d4:	0c c0       	rjmp	.+24     	; 0x1ee <main+0x7e>
				{
					UDR = 'i';
 1d6:	1c b9       	out	0x0c, r17	; 12
 1d8:	0a c0       	rjmp	.+20     	; 0x1ee <main+0x7e>
				}
			} 
			else
			{
				PORTB &= ~(1<<PB2);
 1da:	c2 98       	cbi	0x18, 2	; 24
				PORTA &= ~(1<<PA2);
 1dc:	da 98       	cbi	0x1b, 2	; 27
 1de:	8f ec       	ldi	r24, 0xCF	; 207
 1e0:	97 e0       	ldi	r25, 0x07	; 7
 1e2:	01 97       	sbiw	r24, 0x01	; 1
 1e4:	f1 f7       	brne	.-4      	; 0x1e2 <main+0x72>
 1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <main+0x78>
 1e8:	00 00       	nop
				_delay_ms(1);
				if (bit_is_clear(PINC, PINC2))
 1ea:	9a 9b       	sbis	0x13, 2	; 19
				{
					UDR = 'f';
 1ec:	0c b9       	out	0x0c, r16	; 12
				}
			}
			InterPS2 = false;
 1ee:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <_edata>
 1f2:	8f ec       	ldi	r24, 0xCF	; 207
 1f4:	97 e0       	ldi	r25, 0x07	; 7
 1f6:	01 97       	sbiw	r24, 0x01	; 1
 1f8:	f1 f7       	brne	.-4      	; 0x1f6 <main+0x86>
 1fa:	00 c0       	rjmp	.+0      	; 0x1fc <main+0x8c>
 1fc:	00 00       	nop
		}
		_delay_ms(1);
		if (Interuupt_F1)
 1fe:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <Interuupt_F1>
 202:	88 23       	and	r24, r24
 204:	11 f1       	breq	.+68     	; 0x24a <main+0xda>
		{
			if (In_F1)
 206:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <In_F1>
 20a:	88 23       	and	r24, r24
 20c:	61 f0       	breq	.+24     	; 0x226 <main+0xb6>
			{
				PORTB |= (1<<PB1);
 20e:	c1 9a       	sbi	0x18, 1	; 24
				PORTA |= (1<<PA1);
 210:	d9 9a       	sbi	0x1b, 1	; 27
 212:	8f ec       	ldi	r24, 0xCF	; 207
 214:	97 e0       	ldi	r25, 0x07	; 7
 216:	01 97       	sbiw	r24, 0x01	; 1
 218:	f1 f7       	brne	.-4      	; 0x216 <main+0xa6>
 21a:	00 c0       	rjmp	.+0      	; 0x21c <main+0xac>
 21c:	00 00       	nop
				_delay_ms(1);
				if (bit_is_set(PINC, PINC1))
 21e:	99 99       	sbic	0x13, 1	; 19
				{
					UDR = 'c';
 220:	fc b8       	out	0x0c, r15	; 12
				}
				In_F1 = false;
 222:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <In_F1>
			}						
			if (Out_F1)
 226:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <Out_F1>
 22a:	88 23       	and	r24, r24
 22c:	61 f0       	breq	.+24     	; 0x246 <main+0xd6>
			{
				PORTB &= ~(1<<PB1);
 22e:	c1 98       	cbi	0x18, 1	; 24
				PORTA &= ~(1<<PA1);
 230:	d9 98       	cbi	0x1b, 1	; 27
 232:	8f ec       	ldi	r24, 0xCF	; 207
 234:	97 e0       	ldi	r25, 0x07	; 7
 236:	01 97       	sbiw	r24, 0x01	; 1
 238:	f1 f7       	brne	.-4      	; 0x236 <main+0xc6>
 23a:	00 c0       	rjmp	.+0      	; 0x23c <main+0xcc>
 23c:	00 00       	nop
				_delay_ms(1);
				if (bit_is_clear(PINC, PINC1))
 23e:	99 9b       	sbis	0x13, 1	; 19
				{
					UDR = 'd';
 240:	ec b8       	out	0x0c, r14	; 12
				}
				Out_F1 = true;
 242:	d0 93 63 00 	sts	0x0063, r29	; 0x800063 <Out_F1>
			}
			Interuupt_F1 = false;			
 246:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <Interuupt_F1>
 24a:	8f ec       	ldi	r24, 0xCF	; 207
 24c:	97 e0       	ldi	r25, 0x07	; 7
 24e:	01 97       	sbiw	r24, 0x01	; 1
 250:	f1 f7       	brne	.-4      	; 0x24e <main+0xde>
 252:	00 c0       	rjmp	.+0      	; 0x254 <main+0xe4>
 254:	00 00       	nop
		}
		_delay_ms(1);
		if (InterfaceCounter)
 256:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <InterfaceCounter>
 25a:	88 23       	and	r24, r24
 25c:	59 f0       	breq	.+22     	; 0x274 <main+0x104>
		{
			DDRA = 0xFF;
 25e:	ca bb       	out	0x1a, r28	; 26
			DDRB = 0xFF;
 260:	c7 bb       	out	0x17, r28	; 23
			DDRC = 0x00;
 262:	14 ba       	out	0x14, r1	; 20
			PORTA |= (1<<PA0);
 264:	d8 9a       	sbi	0x1b, 0	; 27
			PORTA &= ~(1<<PA1);
 266:	d9 98       	cbi	0x1b, 1	; 27
			PORTB |= (1<<PB0);
 268:	c0 9a       	sbi	0x18, 0	; 24
			PORTB &= ~(1<<PB1);
 26a:	c1 98       	cbi	0x18, 1	; 24
			bool IN_0_SW_ON = false;
			bool OUT_0_SW_ON = false;
			bool InterruptCounter = false;
			InitPort();
 26c:	0e 94 5f 00 	call	0xbe	; 0xbe <_Z8InitPortv>
			InterfaceCounter = false;
 270:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <InterfaceCounter>
 274:	8f ec       	ldi	r24, 0xCF	; 207
 276:	97 e0       	ldi	r25, 0x07	; 7
 278:	01 97       	sbiw	r24, 0x01	; 1
 27a:	f1 f7       	brne	.-4      	; 0x278 <main+0x108>
 27c:	00 c0       	rjmp	.+0      	; 0x27e <main+0x10e>
 27e:	00 00       	nop
		}
		_delay_ms(1);
		if (InterruptCounter)
 280:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <InterruptCounter>
 284:	88 23       	and	r24, r24
 286:	09 f4       	brne	.+2      	; 0x28a <main+0x11a>
 288:	8e cf       	rjmp	.-228    	; 0x1a6 <main+0x36>
		{
			if (IN_0_SW_ON)
 28a:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <IN_0_SW_ON>
 28e:	88 23       	and	r24, r24
 290:	b9 f0       	breq	.+46     	; 0x2c0 <main+0x150>
			{
				PORTA &= ~(1<<PA0);
 292:	d8 98       	cbi	0x1b, 0	; 27
				PORTA |= (1<<PA1);
 294:	d9 9a       	sbi	0x1b, 1	; 27
				PORTB &= ~(1<<PB0);
 296:	c0 98       	cbi	0x18, 0	; 24
 298:	8f ec       	ldi	r24, 0xCF	; 207
 29a:	97 e0       	ldi	r25, 0x07	; 7
 29c:	01 97       	sbiw	r24, 0x01	; 1
 29e:	f1 f7       	brne	.-4      	; 0x29c <main+0x12c>
 2a0:	00 c0       	rjmp	.+0      	; 0x2a2 <main+0x132>
 2a2:	00 00       	nop
				_delay_ms(1);
				if (bit_is_clear(PINC, PINC0))
 2a4:	98 9b       	sbis	0x13, 0	; 19
				{
					UDR = 'a';
 2a6:	dc b8       	out	0x0c, r13	; 12
 2a8:	8f ec       	ldi	r24, 0xCF	; 207
 2aa:	97 e0       	ldi	r25, 0x07	; 7
 2ac:	01 97       	sbiw	r24, 0x01	; 1
 2ae:	f1 f7       	brne	.-4      	; 0x2ac <main+0x13c>
 2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <main+0x142>
 2b2:	00 00       	nop
				}
				_delay_ms(1);
				if (bit_is_set(PINC, PINC1))
 2b4:	99 9b       	sbis	0x13, 1	; 19
 2b6:	02 c0       	rjmp	.+4      	; 0x2bc <main+0x14c>
				{
					PORTB |= (1<<PB1);
 2b8:	c1 9a       	sbi	0x18, 1	; 24
					UDR = 'c';
 2ba:	fc b8       	out	0x0c, r15	; 12
				}
				IN_0_SW_ON = false;
 2bc:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <IN_0_SW_ON>
			}
			if (OUT_0_SW_ON)
 2c0:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <OUT_0_SW_ON>
 2c4:	88 23       	and	r24, r24
 2c6:	d1 f0       	breq	.+52     	; 0x2fc <main+0x18c>
			{
				PORTB |= (1<<PB0);
 2c8:	c0 9a       	sbi	0x18, 0	; 24
				PORTB &= ~(1<<PB1);
 2ca:	c1 98       	cbi	0x18, 1	; 24
				PORTA |= (1<<PA0);
 2cc:	d8 9a       	sbi	0x1b, 0	; 27
				PORTA &= ~(1<<PA1);
 2ce:	d9 98       	cbi	0x1b, 1	; 27
 2d0:	8f ec       	ldi	r24, 0xCF	; 207
 2d2:	97 e0       	ldi	r25, 0x07	; 7
 2d4:	01 97       	sbiw	r24, 0x01	; 1
 2d6:	f1 f7       	brne	.-4      	; 0x2d4 <main+0x164>
 2d8:	00 c0       	rjmp	.+0      	; 0x2da <main+0x16a>
 2da:	00 00       	nop
				_delay_ms(1);
				if (bit_is_set(PINC, PINC0))
 2dc:	98 9b       	sbis	0x13, 0	; 19
 2de:	02 c0       	rjmp	.+4      	; 0x2e4 <main+0x174>
				{
					UDR = 'b';
 2e0:	82 e6       	ldi	r24, 0x62	; 98
 2e2:	8c b9       	out	0x0c, r24	; 12
 2e4:	8f ec       	ldi	r24, 0xCF	; 207
 2e6:	97 e0       	ldi	r25, 0x07	; 7
 2e8:	01 97       	sbiw	r24, 0x01	; 1
 2ea:	f1 f7       	brne	.-4      	; 0x2e8 <main+0x178>
 2ec:	00 c0       	rjmp	.+0      	; 0x2ee <main+0x17e>
 2ee:	00 00       	nop
				}
				_delay_ms(1);
				if (bit_is_clear(PINC, PINC1))
 2f0:	99 99       	sbic	0x13, 1	; 19
 2f2:	02 c0       	rjmp	.+4      	; 0x2f8 <main+0x188>
				{
					PORTB &= ~(1<<PB1);
 2f4:	c1 98       	cbi	0x18, 1	; 24
					UDR = 'd';
 2f6:	ec b8       	out	0x0c, r14	; 12
				}
				
				OUT_0_SW_ON = false;
 2f8:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <OUT_0_SW_ON>
			}
			InterruptCounter = false;
 2fc:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <InterruptCounter>
 300:	52 cf       	rjmp	.-348    	; 0x1a6 <main+0x36>

00000302 <__tablejump2__>:
 302:	ee 0f       	add	r30, r30
 304:	ff 1f       	adc	r31, r31
 306:	05 90       	lpm	r0, Z+
 308:	f4 91       	lpm	r31, Z
 30a:	e0 2d       	mov	r30, r0
 30c:	09 94       	ijmp

0000030e <_exit>:
 30e:	f8 94       	cli

00000310 <__stop_program>:
 310:	ff cf       	rjmp	.-2      	; 0x310 <__stop_program>
